{"version":3,"sources":["Login.js","App.js","index.js"],"names":["Login","onLogin","useState","code","setCode","token","useEffect","searchParams","URLSearchParams","window","location","search","get","fetchToken","a","axios","process","resp","data","className","Button","variant","onClick","App","setToken","GetPlaylistForm","GeneratePlaylist","playlistId","setPlaylistId","playlists","setPlaylists","handleSubmit","event","preventDefault","headers","onSubmit","type","name","placeholder","onChange","e","target","value","map","playlist","src","album","images","url","artists","href","external_urls","spotify","post","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dbe2d3e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [code, setCode] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    setCode(searchParams.get('code'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchToken = async () => {\r\n      const resp = await axios.get(`${process.env.REACT_APP_BE_API_URL}/token?code=${code}`);\r\n      onLogin(resp.data.token);\r\n    };\r\n\r\n    if (code) {\r\n      fetchToken();\r\n    }\r\n  }, [code, onLogin]);\r\n\r\n  const handleLogin = () => {\r\n    window.location = `https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_SPOTIFY_CLIENT_ID}\\u0026redirect_uri=${process.env.REACT_APP_SPOTIFY_CALLBACK_URL}\\u0026response_type=code\\u0026scope=playlist-modify-private+playlist-modify-public\\u0026state=abc123`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {!token && (\r\n        <Button variant=\"primary\" className=\"green-button\" onClick={handleLogin}>Login with Spotify</Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Login;","import './App.css';\r\nimport React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Button } from 'react-bootstrap';\r\nimport Login from './Login'\r\n\r\nconst code = new URLSearchParams(window.location.search).get('code')\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  return (<>\r\n    <h1>Deep Cuts</h1>\r\n    <p>This app will remix your playlists, for when you want something different... but not TOO different. For each song on a playlist, Deep Cuts will get a different song from the same album. It will put these songs into a new playlist on your account!</p>\r\n    <div className=\"playlist-container\">\r\n      {!token && <Login onLogin={setToken} />}\r\n      <div className=\"get-playlist-form-container\">\r\n        {token && <GetPlaylistForm token={token} />}\r\n      </div>\r\n      <div className=\"generate-playlist-container\">\r\n        {token && <GeneratePlaylist token={token} />}\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nfunction GetPlaylistForm({ token }) {\r\n  const [playlistId, setPlaylistId] = useState(\"\");\r\n  const [playlists, setPlaylists] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const resp = await axios.get(`${process.env.REACT_APP_BE_API_URL}/${playlistId}`,\r\n    {\r\n      headers: {\r\n        'Authorization': \"Bearer \" + token\r\n      }\r\n    });\r\n    const playlists = resp.data;\r\n\r\n    setPlaylists(playlists);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n            name=\"playlistId\"\r\n            placeholder=\"Playlist ID\" \r\n            onChange={(e) => setPlaylistId(e.target.value)} />\r\n            <Button variant=\"primary\" type=\"submit\" className=\"green-button\">Get Playlist!</Button>\r\n        </form>\r\n      </div>\r\n      <div className=\"song-list\">\r\n      {playlists && playlists.map(playlist =>\r\n        <div className=\"song-item\">\r\n          <div>Track: </div>\r\n          <div className=\"song-thumbnail\">\r\n            <img src={playlist.album.images[2].url}></img>\r\n          </div>\r\n          <div className=\"song-info\">\r\n            <div>Song: {playlist.name}</div>\r\n            <div>Artist: {playlist.artists[0].name}</div>\r\n            <a href={playlist.external_urls.spotify} target=\"_blank\">Listen!</a>\r\n            <div>Link: {playlist.external_urls.spotify}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ListPlaylistTracks() {\r\n  const [playlist, setPlaylist] = useState(\"\");\r\n\r\n  return <>\r\n  {(playlist === \"\" || playlist === undefined) &&\r\n  <div>No list</div>}\r\n  {(playlist !== \"\" && playlist !== undefined) &&\r\n  <div>This is List {playlist[0]}</div> }\r\n  </>\r\n//<div>This is List ${playlist[0].artists[0].name}</div> }\r\n}\r\n\r\nfunction GeneratePlaylist({ token }) {\r\n  const [playlistId, setPlaylistId] = useState(\"\");\r\n  const [playlists, setPlaylists] = useState(\"\");\r\n  \r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const resp = await axios.post(`${process.env.REACT_APP_BE_API_URL}/${playlistId}`, null,\r\n    {\r\n      headers: {\r\n        'Authorization': \"Bearer \" + token\r\n      }\r\n    })\r\n    const playlists = resp.data\r\n\r\n    setPlaylists(playlists);\r\n  };\r\n  return <>\r\n    <div className=\"main\">\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" \r\n            name=\"playlistId\"\r\n            placeholder=\"Playlist ID\" \r\n            onChange={(e) => setPlaylistId(e.target.value)} />\r\n            <Button variant=\"primary\" type=\"submit\" className=\"green-button\">Generate Deep Cut Playlist!</Button>\r\n        </form>\r\n      </div>\r\n      <div className=\"song-list\">\r\n      {playlists &&\r\n        <div>Your new playlist: </div>}\r\n      {playlists && playlists.map(playlist =>\r\n        <div className=\"song-item\">\r\n          <div>Track: </div>\r\n          <div className=\"song-thumbnail\">\r\n            <img src={playlist.album.images[2].url}></img>\r\n          </div>\r\n          <div className=\"song-info\">\r\n            <div>Song: {playlist.name}</div>\r\n            <div>Artist: {playlist.artists[0].name}</div>\r\n            <a href={playlist.external_urls.spotify} target=\"_blank\">Listen!</a>\r\n            <div>Link: {playlist.external_urls.spotify}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </div>\r\n  </div>\r\n  </>\r\n}\r\n\r\nfunction GetToken({ setToken }) {\r\n  //const [tokenState, setToken] = useState([]);\r\n  useEffect(async() => {\r\n    const resp = await axios.get(`${process.env.REACT_APP_BE_API_URL}/token?code=${code}`)\r\n    const token = resp.data.token\r\n    //Are we setting the state properly here?\r\n    setToken(token);\r\n  }, []);\r\n\r\n  return null\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <body>\r\n      <App />\r\n    </body>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}